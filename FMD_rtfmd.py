# -*- coding: utf-8 -*-
"""FMD_rtfmd.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UWuHsC5mYI7vlRbq_j4kXPeyF1PrcivW

##**Test Model in Video Stream**
"""

from keras.models import load_model
import cv2,os

model = load_model('model-007.model')

face_classifier_hc = cv2.CascadeClassifier('haarcascade_frontalface_default.xml')

source = cv2.VideoCapture(0)
labels_dict = {0:'MASK',1:'NO MASK'}
color_dict  = {0:(0,255,0),1:(0,0,255)}

"""####**Important Note :**


The following code is to detect Face Masks in **Reatime Video Feed** from your local camera. Realtime detection of Face Masks is implemented.



**This next code works only if you are working on your local machine.** 

**While working on virtual machines (Google Colab, IBM Watson, etc.) you need to manually add a separate section of code for the virtual runtime to get access of your local web camera. Else, you could run the following part of code locally on your machine.**

####**Real Time Face Mask Detection**
"""

while(True):

    #ret, img=source.read()
    ret, img = 

    gray = cv2.cvtColor(img,cv2.COLOR_BGR2GRAY)

    faces=face_clsfr.detectMultiScale(gray,1.3,5)  

    for (x,y,w,h) in faces:
    
        face_img=gray[y:y+w,x:x+w]
        resized=cv2.resize(face_img,(100,100))
        normalized=resized/255.0
        reshaped=np.reshape(normalized,(1,100,100,1))
        result=model.predict(reshaped)

        label=np.argmax(result,axis=1)[0]
      
        cv2.rectangle(img,(x,y),(x+w,y+h),color_dict[label],2)
        cv2.rectangle(img,(x,y-40),(x+w,y),color_dict[label],-1)
        cv2.putText(img, labels_dict[label], (x, y-10),cv2.FONT_HERSHEY_SIMPLEX,0.8,(255,255,255),2)
        
        
    cv2.imshow('LIVE',img)
    key=cv2.waitKey(1)
    
    if(key==27):
        break
        
cv2.destroyAllWindows()
source.release()